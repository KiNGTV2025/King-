name: √úMƒ∞T TV G√ºncelleme Raporu

on:
  schedule:
    - cron: "0 3,9,15,21 * * *" # T√ºrkiye saati 06:00, 12:00, 18:00, 00:00
  workflow_dispatch:

jobs:
  notify:
    runs-on: ubuntu-latest
    env:
      BOT_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
      CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      M3U_URL: ${{ secrets.M3U_URL }}

    steps:
      - name: Repo'yu al
        uses: actions/checkout@v4

      - name: √ñnceki verileri indir
        run: |
          gh run download --name category_counts || echo "√ñnceki veri bulunamadƒ±"
          gh run download --name telegram_last_message || echo "Eski mesaj ID'si bulunamadƒ±"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Eski veri kontrol√º
        run: |
          [ -f old_counts.txt ] || touch old_counts.txt
          [ -f old_message_id.txt ] || echo "" > old_message_id.txt

      - name: M3U dosyasƒ±nƒ± indir
        run: curl -s -L "$M3U_URL" -o playlist.m3u

      - name: Kategori analizi yap
        run: |
          grep -oP 'group-title="\K[^"]+' playlist.m3u \
          | tr -d '\r' \
          | sed 's/[[:space:]]\+/ /g' \
          | sed -E 's/([Bb][Ee][Ii][Nn])/Morpaket/g' \
          | sort \
          | uniq -c \
          | awk '{$1=$1; count=$1; $1=""; name=substr($0,2); print count "|" name}' > new_counts.txt

      - name: Rapor olu≈ütur
        run: |
          if [ -s old_counts.txt ]; then
            sed -i -E 's/([Bb][Ee][Ii][Nn])/Morpaket/g' old_counts.txt
          fi

          NEW_TOTAL=$(awk -F"|" '{sum += $1} END {print sum}' new_counts.txt)
          OLD_TOTAL=$(awk -F"|" '{sum += $1} END {print sum}' old_counts.txt 2>/dev/null || echo 0)
          CHANGE=$((NEW_TOTAL - OLD_TOTAL))
          PERCENT="0"
          if [ "$OLD_TOTAL" -gt 0 ]; then
            PERCENT=$(awk "BEGIN {printf \"%.2f\", ($CHANGE/$OLD_TOTAL)*100}")
          fi

          MESSAGE="<b>üìä √úMƒ∞T TV KANAL G√úNCELLEME RAPORU</b>\n\n"
          MESSAGE+="<b>üïí Son G√ºncelleme (TSƒ∞):</b> <code>$(TZ='Europe/Istanbul' date '+%d.%m.%Y %H:%M:%S')</code>\n"
          MESSAGE+="<b>üî¢ Toplam Kanal:</b> <b>${NEW_TOTAL}</b>"

          if [ "$CHANGE" -gt 0 ]; then
            MESSAGE+=" (<code>‚Üë+${CHANGE}</code> | %${PERCENT})\n\n"
          elif [ "$CHANGE" -lt 0 ]; then
            MESSAGE+=" (<code>‚Üì${CHANGE}</code> | %${PERCENT})\n\n"
          else
            MESSAGE+=" (<code>‚Üí Deƒüi≈üiklik yok</code>)\n\n"
          fi

          MESSAGE+="<b>üìã KATEGORƒ∞ DEƒûƒ∞≈ûƒ∞KLƒ∞KLERƒ∞</b>\n"

          TEMP_CHANGED=$(mktemp)
          TEMP_NEW=$(mktemp)
          TEMP_REMOVED=$(mktemp)
          TEMP_UNCHANGED=$(mktemp)

          # Yeni kategoriler
          comm -23 <(cut -d"|" -f2 new_counts.txt | sort) <(cut -d"|" -f2 old_counts.txt 2>/dev/null | sort) > new_categories.txt
          while read -r CATEGORY; do
            COUNT=$(grep -F "|${CATEGORY}" new_counts.txt | cut -d"|" -f1)
            echo "üÜï <b>${CATEGORY}</b>: ${COUNT} kanal (yeni kategori)" >> "$TEMP_NEW"
          done < new_categories.txt

          # Kaldƒ±rƒ±lan kategoriler
          comm -13 <(cut -d"|" -f2 new_counts.txt | sort) <(cut -d"|" -f2 old_counts.txt 2>/dev/null | sort) > removed_categories.txt
          while read -r CATEGORY; do
            OLD_COUNT=$(grep -F "|${CATEGORY}" old_counts.txt | cut -d"|" -f1)
            echo "‚ùå <b>${CATEGORY}</b>: 0 kanal (kaldƒ±rƒ±ldƒ±, √∂nceki: ${OLD_COUNT})" >> "$TEMP_REMOVED"
          done < removed_categories.txt

          # Deƒüi≈üen kategoriler
          while IFS="|" read -r COUNT CATEGORY; do
            OLD_COUNT=$(grep -F "|${CATEGORY}" old_counts.txt 2>/dev/null | cut -d"|" -f1)
            if [ -n "$OLD_COUNT" ] && [ "$OLD_COUNT" -ne "$COUNT" ]; then
              if [ "$COUNT" -gt "$OLD_COUNT" ]; then
                echo "‚¨ÜÔ∏è <b>${CATEGORY}</b>: ${COUNT} kanal (<code>‚Üë+$((COUNT - OLD_COUNT))</code>)" >> "$TEMP_CHANGED"
              else
                echo "‚¨áÔ∏è <b>${CATEGORY}</b>: ${COUNT} kanal (<code>‚Üì-$((OLD_COUNT - COUNT))</code>)" >> "$TEMP_CHANGED"
              fi
            elif [ -n "$OLD_COUNT" ]; then
              echo "‚è∫Ô∏è <b>${CATEGORY}</b>: ${COUNT} kanal (deƒüi≈ümedi)" >> "$TEMP_UNCHANGED"
            fi
          done < new_counts.txt

          if [ -s "$TEMP_NEW" ]; then
            MESSAGE+="\n<b>üåü YENƒ∞ KATEGORƒ∞LER</b>\n"
            MESSAGE+=$(cat "$TEMP_NEW")
            MESSAGE+="\n"
          fi
          if [ -s "$TEMP_REMOVED" ]; then
            MESSAGE+="\n<b>üóëÔ∏è KALDIRILAN KATEGORƒ∞LER</b>\n"
            MESSAGE+=$(cat "$TEMP_REMOVED")
            MESSAGE+="\n"
          fi
          if [ -s "$TEMP_CHANGED" ]; then
            MESSAGE+="\n<b>üîÑ DEƒûƒ∞≈ûEN KATEGORƒ∞LER</b>\n"
            MESSAGE+=$(cat "$TEMP_CHANGED")
            MESSAGE+="\n"
          fi
          if [ -s "$TEMP_UNCHANGED" ]; then
            MESSAGE+="\n<b>‚öñÔ∏è DEƒûƒ∞≈ûMEYEN KATEGORƒ∞LER</b>\n"
            MESSAGE+=$(cat "$TEMP_UNCHANGED")
            MESSAGE+="\n"
          fi

          MESSAGE+="\n<b>üìå A√áIKLAMALAR</b>\n"
          MESSAGE+="üÜï Yeni kategori\n‚¨ÜÔ∏è Artƒ±≈ü\n‚¨áÔ∏è Azalƒ±≈ü\n‚è∫Ô∏è Sabit\n‚ùå Kaldƒ±rƒ±lan\n\n"
          MESSAGE+="<i>‚ÑπÔ∏è Otomatik g√ºncelleme raporu - √úMƒ∞T TV</i>"

          echo -e "$MESSAGE" > message.txt

      - name: Eski mesaj(lar)ƒ± sil
        run: |
          if [ -s old_message_id.txt ]; then
            while read -r OLD_ID; do
              [ -n "$OLD_ID" ] && curl -s -X POST \
                "https://api.telegram.org/bot${BOT_TOKEN}/deleteMessage" \
                -d "chat_id=${CHAT_ID}" \
                -d "message_id=${OLD_ID}" >/dev/null
            done < old_message_id.txt
          fi
          > old_message_id.txt

      - name: Mesajƒ± par√ßalara b√∂lerek g√∂nder
        run: |
          TEXT=$(cat message.txt)
          MAX=4000
          START=0
          > old_message_id.txt

          while [ $START -lt ${#TEXT} ]; do
            PART=$(echo "$TEXT" | cut -c$((START+1))-$((START+MAX)))
            RESPONSE=$(curl -s --data-urlencode "text=$PART" \
              -d "chat_id=${CHAT_ID}" \
              -d "parse_mode=HTML" \
              "https://api.telegram.org/bot${BOT_TOKEN}/sendMessage")
            MSG_ID=$(echo "$RESPONSE" | jq -r '.result.message_id')
            echo "$MSG_ID" >> old_message_id.txt
            START=$((START+MAX))
          done

      - name: Veriyi g√ºncelle
        run: mv new_counts.txt old_counts.txt

      - name: Yeni verileri kaydet
        uses: actions/upload-artifact@v4
        with:
          name: category_counts
          path: old_counts.txt

      - name: Mesaj ID'lerini kaydet
        uses: actions/upload-artifact@v4
        with:
          name: telegram_last_message
          path: old_message_id.txt
