name: √úMƒ∞T TV G√ºncelleme Bildirimi

on:
  schedule:
    - cron: "0 */6 * * *" # 6 saatte bir (UTC)
  workflow_dispatch: # Manuel tetikleme

jobs:
  notify:
    runs-on: ubuntu-latest
    env:
      BOT_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
      CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      M3U_URL: ${{ secrets.M3U_URL }}

    steps:
      - name: √ñnceki kategori verisini indir
        run: echo "---- STEP: Download artifact ----"

      - uses: actions/download-artifact@v4
        with:
          name: category_counts
        continue-on-error: true

      - name: Eƒüer eski veri yoksa bo≈ü dosya olu≈ütur
        run: |
          echo "---- STEP: Check old_counts.txt ----"
          if [ ! -f old_counts.txt ]; then
            echo "No old_counts.txt found, creating empty file"
            touch old_counts.txt
          fi

      - name: M3U dosyasƒ±nƒ± indir
        run: |
          echo "---- STEP: Download M3U ----"
          curl -s -L "$M3U_URL" -o playlist.m3u
          echo "Playlist size: $(wc -c < playlist.m3u) bytes"

      - name: Yeni kategori sayƒ±mƒ±nƒ± √ßƒ±kar (bein ‚Üí Morpaket)
        run: |
          echo "---- STEP: Parse M3U ----"
          grep -oP 'group-title="\K[^"]+' playlist.m3u \
          | sed -E 's/([Bb][Ee][Ii][Nn])/Morpaket/g' \
          | awk '!seen[$0]++ {print $0}' > category_order.txt
          echo "Category order:"
          cat category_order.txt

          grep -oP 'group-title="\K[^"]+' playlist.m3u \
          | sed -E 's/([Bb][Ee][Ii][Nn])/Morpaket/g' \
          | sort | uniq -c > new_counts.txt
          echo "New counts:"
          cat new_counts.txt

      - name: Deƒüi≈üiklikleri kar≈üƒ±la≈ütƒ±r ve HTML mesaj olu≈ütur
        run: |
          echo "---- STEP: Compare categories ----"
          if [ -s old_counts.txt ]; then
            sed -i -E 's/([Bb][Ee][Ii][Nn])/Morpaket/g' old_counts.txt
          fi

          NEW_TOTAL=$(awk '{sum += $1} END {print sum}' new_counts.txt)
          OLD_TOTAL=$(awk '{sum += $1} END {print sum}' old_counts.txt 2>/dev/null || echo 0)
          CHANGE=$((NEW_TOTAL - OLD_TOTAL))
          PERCENT="0"
          if [ "$OLD_TOTAL" -gt 0 ]; then
            PERCENT=$(awk "BEGIN {printf \"%.2f\", ($CHANGE/$OLD_TOTAL)*100}")
          fi

          MESSAGE="<b>üì∫ √úMƒ∞T TV G√úNCELLENDƒ∞</b>%0A"
          MESSAGE+="<i>Tarih:</i> <code>$(date '+%Y-%m-%d %H:%M:%S')</code>%0A"
          MESSAGE+="<b>Kategoriler:</b>%0A"

          TEMP_CHANGE=$(mktemp)
          TEMP_SAME=$(mktemp)

          while read -r CATEGORY; do
            COUNT=$(grep -F "$CATEGORY" new_counts.txt | awk '{print $1}')
            OLD_COUNT=$(grep -F "$CATEGORY" old_counts.txt 2>/dev/null | awk '{print $1}')
            if [ -z "$OLD_COUNT" ] || [ "$OLD_TOTAL" -eq 0 ]; then
              ICON="üü¢"
              echo "${ICON} <b>${CATEGORY}</b>: ${COUNT} kanal" >> "$TEMP_CHANGE"
            elif [ "$COUNT" -gt "$OLD_COUNT" ]; then
              ICON="‚úÖ"
              echo "${ICON} <b>${CATEGORY}</b>: ${COUNT} kanal" >> "$TEMP_CHANGE"
            elif [ "$COUNT" -lt "$OLD_COUNT" ]; then
              ICON="üîª"
              echo "${ICON} <b>${CATEGORY}</b>: ${COUNT} kanal" >> "$TEMP_CHANGE"
            else
              ICON="‚ö™"
              echo "${ICON} <b>${CATEGORY}</b>: ${COUNT} kanal" >> "$TEMP_SAME"
            fi
          done < category_order.txt

          cat "$TEMP_CHANGE" "$TEMP_SAME" > sorted_list.txt
          echo "Final sorted list:"
          cat sorted_list.txt

          while read -r LINE; do
            MESSAGE+="${LINE}%0A"
          done < sorted_list.txt

          MESSAGE+="%0A<b>üìä Toplam:</b> ${NEW_TOTAL} kanal"
          if [ "$CHANGE" -gt 0 ]; then
            MESSAGE+=" (‚úÖ +${CHANGE} | %${PERCENT})"
          elif [ "$CHANGE" -lt 0 ]; then
            MESSAGE+=" (üîª ${CHANGE} | %${PERCENT})"
          fi
          MESSAGE+="%0A"

          MESSAGE+="%0A<b>üìù A√ßƒ±klama:</b>%0A"
          MESSAGE+="üü¢ Yeni kategori eklendi%0A"
          MESSAGE+="‚úÖ Kanal sayƒ±sƒ± arttƒ±%0A"
          MESSAGE+="üîª Kanal sayƒ±sƒ± azaldƒ±%0A"
          MESSAGE+="‚ö™ Deƒüi≈üiklik yok%0A"

          echo "$MESSAGE" > message.txt

      - name: Telegram mesajƒ±nƒ± g√∂nder (DEBUG)
        run: |
          echo "---- STEP: Send Telegram message ----"
          curl -v -X POST "https://api.telegram.org/bot${BOT_TOKEN}/sendMessage" \
            -d chat_id="${CHAT_ID}" \
            -d parse_mode="HTML" \
            -d text="$(cat message.txt)"
        continue-on-error: true

      - name: Yeni veriyi artifact olarak kaydet
        run: mv new_counts.txt old_counts.txt

      - name: Artifact y√ºkle
        uses: actions/upload-artifact@v4
        with:
          name: category_counts
          path: old_counts.txt
